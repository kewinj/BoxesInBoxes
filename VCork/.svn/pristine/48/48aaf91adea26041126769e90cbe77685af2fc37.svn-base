//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CorkageModel", "FK_Task_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIATest.Web.Category), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIATest.Web.Task), true)]
[assembly: EdmRelationshipAttribute("CorkageModel", "FK_Story_Sprint", "Sprint", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIATest.Web.Sprint), "Story", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIATest.Web.Story), true)]
[assembly: EdmRelationshipAttribute("CorkageModel", "FK_Task_Story", "Story", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RIATest.Web.Story), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RIATest.Web.Task), true)]

#endregion

namespace RIATest.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CorkageEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CorkageEntities object using the connection string found in the 'CorkageEntities' section of the application configuration file.
        /// </summary>
        public CorkageEntities() : base("name=CorkageEntities", "CorkageEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CorkageEntities object.
        /// </summary>
        public CorkageEntities(string connectionString) : base(connectionString, "CorkageEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CorkageEntities object.
        /// </summary>
        public CorkageEntities(EntityConnection connection) : base(connection, "CorkageEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sprint> Sprints
        {
            get
            {
                if ((_Sprints == null))
                {
                    _Sprints = base.CreateObjectSet<Sprint>("Sprints");
                }
                return _Sprints;
            }
        }
        private ObjectSet<Sprint> _Sprints;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Story> Stories
        {
            get
            {
                if ((_Stories == null))
                {
                    _Stories = base.CreateObjectSet<Story>("Stories");
                }
                return _Stories;
            }
        }
        private ObjectSet<Story> _Stories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sprints EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSprints(Sprint sprint)
        {
            base.AddObject("Sprints", sprint);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStories(Story story)
        {
            base.AddObject("Stories", story);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CorkageModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Category CreateCategory(global::System.Int32 categoryId, global::System.String description)
        {
            Category category = new Category();
            category.CategoryId = categoryId;
            category.Description = description;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CorkageModel", "FK_Task_Category", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("CorkageModel.FK_Task_Category", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("CorkageModel.FK_Task_Category", "Task", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CorkageModel", Name="Sprint")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sprint : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sprint object.
        /// </summary>
        /// <param name="sprintId">Initial value of the SprintId property.</param>
        public static Sprint CreateSprint(global::System.Int32 sprintId)
        {
            Sprint sprint = new Sprint();
            sprint.SprintId = sprintId;
            return sprint;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SprintId
        {
            get
            {
                return _SprintId;
            }
            set
            {
                if (_SprintId != value)
                {
                    OnSprintIdChanging(value);
                    ReportPropertyChanging("SprintId");
                    _SprintId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SprintId");
                    OnSprintIdChanged();
                }
            }
        }
        private global::System.Int32 _SprintId;
        partial void OnSprintIdChanging(global::System.Int32 value);
        partial void OnSprintIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CorkageModel", "FK_Story_Sprint", "Story")]
        public EntityCollection<Story> Stories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Story>("CorkageModel.FK_Story_Sprint", "Story");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Story>("CorkageModel.FK_Story_Sprint", "Story", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CorkageModel", Name="Story")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Story : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Story object.
        /// </summary>
        /// <param name="storyId">Initial value of the StoryId property.</param>
        /// <param name="sprintId">Initial value of the SprintId property.</param>
        public static Story CreateStory(global::System.Int32 storyId, global::System.Int32 sprintId)
        {
            Story story = new Story();
            story.StoryId = storyId;
            story.SprintId = sprintId;
            return story;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoryId
        {
            get
            {
                return _StoryId;
            }
            set
            {
                if (_StoryId != value)
                {
                    OnStoryIdChanging(value);
                    ReportPropertyChanging("StoryId");
                    _StoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StoryId");
                    OnStoryIdChanged();
                }
            }
        }
        private global::System.Int32 _StoryId;
        partial void OnStoryIdChanging(global::System.Int32 value);
        partial void OnStoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SprintId
        {
            get
            {
                return _SprintId;
            }
            set
            {
                OnSprintIdChanging(value);
                ReportPropertyChanging("SprintId");
                _SprintId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SprintId");
                OnSprintIdChanged();
            }
        }
        private global::System.Int32 _SprintId;
        partial void OnSprintIdChanging(global::System.Int32 value);
        partial void OnSprintIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CorkageModel", "FK_Story_Sprint", "Sprint")]
        public Sprint Sprint
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sprint>("CorkageModel.FK_Story_Sprint", "Sprint").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sprint>("CorkageModel.FK_Story_Sprint", "Sprint").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sprint> SprintReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sprint>("CorkageModel.FK_Story_Sprint", "Sprint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sprint>("CorkageModel.FK_Story_Sprint", "Sprint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CorkageModel", "FK_Task_Story", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("CorkageModel.FK_Task_Story", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("CorkageModel.FK_Task_Story", "Task", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CorkageModel", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Task object.
        /// </summary>
        /// <param name="taskId">Initial value of the TaskId property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="storyId">Initial value of the StoryId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Task CreateTask(global::System.Int32 taskId, global::System.Int32 categoryId, global::System.Int32 storyId, global::System.String description)
        {
            Task task = new Task();
            task.TaskId = taskId;
            task.CategoryId = categoryId;
            task.StoryId = storyId;
            task.Description = description;
            return task;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskId
        {
            get
            {
                return _TaskId;
            }
            set
            {
                if (_TaskId != value)
                {
                    OnTaskIdChanging(value);
                    ReportPropertyChanging("TaskId");
                    _TaskId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaskId");
                    OnTaskIdChanged();
                }
            }
        }
        private global::System.Int32 _TaskId;
        partial void OnTaskIdChanging(global::System.Int32 value);
        partial void OnTaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StoryId
        {
            get
            {
                return _StoryId;
            }
            set
            {
                OnStoryIdChanging(value);
                ReportPropertyChanging("StoryId");
                _StoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StoryId");
                OnStoryIdChanged();
            }
        }
        private global::System.Int32 _StoryId;
        partial void OnStoryIdChanging(global::System.Int32 value);
        partial void OnStoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CorkageModel", "FK_Task_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CorkageModel.FK_Task_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CorkageModel.FK_Task_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CorkageModel.FK_Task_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("CorkageModel.FK_Task_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CorkageModel", "FK_Task_Story", "Story")]
        public Story Story
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("CorkageModel.FK_Task_Story", "Story").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("CorkageModel.FK_Task_Story", "Story").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Story> StoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Story>("CorkageModel.FK_Task_Story", "Story");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Story>("CorkageModel.FK_Task_Story", "Story", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
